==6031== Memcheck, a memory error detector
==6031== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6031== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==6031== Command: ./app/shell-app
==6031== 
Terps Strong!! cxxxx||========>
==6031== Conditional jump or move depends on uninitialised value(s)
==6031==    at 0x10A2E5: main (main.cpp:10)
==6031== 
==6031== Invalid write of size 4
==6031==    at 0x10A38D: main (main.cpp:16)
==6031==  Address 0x4ddbcd4 is 0 bytes after a block of size 20 alloc'd
==6031==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==6031==    by 0x10AC0B: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:114)
==6031==    by 0x10AAF4: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:443)
==6031==    by 0x10A93D: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:343)
==6031==    by 0x10A714: void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) (stl_vector.h:1579)
==6031==    by 0x10A503: std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) (stl_vector.h:626)
==6031==    by 0x10A36F: main (main.cpp:15)
==6031== 
==6031== 
==6031== HEAP SUMMARY:
==6031==     in use at exit: 0 bytes in 0 blocks
==6031==   total heap usage: 3 allocs, 3 frees, 76,820 bytes allocated
==6031== 
==6031== All heap blocks were freed -- no leaks are possible
==6031== 
==6031== Use --track-origins=yes to see where uninitialised values come from
==6031== For lists of detected and suppressed errors, rerun with: -s
==6031== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
